# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-08-07 21:30
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Moderateur',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_moderateur', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('num_tel', models.CharField(blank=True, max_length=25)),
                ('pays', models.CharField(blank=True, max_length=50)),
                ('nom', models.CharField(blank=True, max_length=50)),
                ('prenom', models.CharField(blank=True, max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Abonnement',
            fields=[
                ('id_abonnement', models.IntegerField(primary_key=True, serialize=False)),
                ('date_deb', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('prix', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Achat',
            fields=[
                ('id_achat', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Artiste',
            fields=[
                ('id_artist', models.IntegerField(primary_key=True, serialize=False)),
                ('pseudo', models.CharField(blank=True, max_length=100)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('photo', models.FileField(upload_to=b'')),
                ('email', models.EmailField(max_length=254)),
                ('num_tel', models.CharField(blank=True, max_length=25)),
                ('pays', models.CharField(blank=True, max_length=50)),
                ('nom', models.CharField(blank=True, max_length=50)),
                ('prenom', models.CharField(blank=True, max_length=50)),
                ('id_moderateur', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id_client', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=25)),
                ('password', models.CharField(max_length=50)),
                ('photo', models.FileField(upload_to=b'')),
                ('num_tel', models.CharField(blank=True, max_length=25)),
                ('pays', models.CharField(blank=True, max_length=50)),
                ('nom', models.CharField(blank=True, max_length=50)),
                ('prenom', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id_commande', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('montant', models.FloatField()),
                ('id_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Ecoutes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nb_ecoutes', models.IntegerField()),
                ('id_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id_genre', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('libelle', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='PistePlaylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id_playlist', models.IntegerField(primary_key=True, serialize=False)),
                ('nom_playlist', models.CharField(max_length=25)),
                ('categorie', models.CharField(max_length=10)),
                ('photo', models.FileField(upload_to=b'')),
                ('id_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Client')),
                ('id_moderateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Precommande',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_abonnement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Abonnement')),
            ],
        ),
        migrations.CreateModel(
            name='Projet',
            fields=[
                ('id_projet', models.IntegerField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=50)),
                ('prix', models.FloatField()),
                ('date_upload', models.DateTimeField()),
                ('date_sortie', models.DateTimeField()),
                ('precommandable', models.BooleanField(default=False)),
                ('etat', models.BooleanField(default=False)),
                ('cover', models.FileField(upload_to=b'')),
                ('id_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Artiste')),
            ],
        ),
        migrations.CreateModel(
            name='Reglement',
            fields=[
                ('id_reglement', models.IntegerField(primary_key=True, serialize=False)),
                ('montant', models.FloatField()),
                ('periode', models.CharField(blank=True, max_length=100)),
                ('date', models.DateTimeField()),
                ('id_artiste', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Artiste')),
                ('id_moderateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Son',
            fields=[
                ('id_son', models.IntegerField(primary_key=True, serialize=False)),
                ('titre', models.CharField(max_length=25)),
                ('featurings', models.CharField(blank=True, max_length=255)),
                ('prix', models.FloatField(default=0)),
                ('chemin_audio', models.FileField(upload_to=b'')),
                ('id_genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Genre')),
                ('id_projet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Projet')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id_type', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('libelle', models.CharField(max_length=25)),
            ],
        ),
        migrations.AddField(
            model_name='projet',
            name='id_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Type'),
        ),
        migrations.AddField(
            model_name='precommande',
            name='id_projet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Projet'),
        ),
        migrations.AddField(
            model_name='pisteplaylist',
            name='id_playlist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Playlist'),
        ),
        migrations.AddField(
            model_name='pisteplaylist',
            name='id_son',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Son'),
        ),
        migrations.AddField(
            model_name='ecoutes',
            name='id_son',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Son'),
        ),
        migrations.AddField(
            model_name='achat',
            name='id_commande',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Commande'),
        ),
        migrations.AddField(
            model_name='achat',
            name='id_projet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Projet'),
        ),
        migrations.AddField(
            model_name='achat',
            name='id_son',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Son'),
        ),
        migrations.AddField(
            model_name='abonnement',
            name='id_client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Client'),
        ),
    ]
